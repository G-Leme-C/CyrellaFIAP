// <auto-generated />
using System;
using Cyrella;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Cyrella.Migrations
{
    [DbContext(typeof(CyrellaDbContext))]
    [Migration("20210417224602_AddTableEmpreendimento")]
    partial class AddTableEmpreendimento
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.11");

            modelBuilder.Entity("Cyrella.Model.Afetacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Bem")
                        .HasColumnType("TEXT");

                    b.Property<int>("EmpreendimentoId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("ValorBem")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("EmpreendimentoId");

                    b.ToTable("Afetacoes");
                });

            modelBuilder.Entity("Cyrella.Model.AgendamentoManutencao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AreaDeAssistencia")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Comodo")
                        .HasColumnType("TEXT");

                    b.Property<string>("DescricaoDefeito")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DtAberturaChamado")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DtAgendamento")
                        .HasColumnType("TEXT");

                    b.Property<string>("ItemComDefeito")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Recorrencia")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("AgendamentoManutencao");
                });

            modelBuilder.Entity("Cyrella.Model.Empreendimento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CoberturaGarantia")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DtAssembleia")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DtDuracaoGarantia")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DtEntregaChaves")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DtInicioVistoria")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DtLancamento")
                        .HasColumnType("TEXT");

                    b.Property<string>("FaseAtual")
                        .HasColumnType("TEXT");

                    b.Property<string>("PautaAssembleia")
                        .HasColumnType("TEXT");

                    b.Property<int>("PercentualCompleto")
                        .HasColumnType("INTEGER");

                    b.Property<int>("QtUnidadesDisponiveis")
                        .HasColumnType("INTEGER");

                    b.Property<double>("ValorInicial")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Empreendimentos");
                });

            modelBuilder.Entity("Cyrella.Model.FaseObra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EmpreendimentoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Fase")
                        .HasColumnType("TEXT");

                    b.Property<int>("Percentual")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("EmpreendimentoId");

                    b.ToTable("FasesObra");
                });

            modelBuilder.Entity("Cyrella.Model.ImagemAgendamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AgendamentoManutencaoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("URL")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AgendamentoManutencaoId");

                    b.ToTable("ImagensAgendamentos");
                });

            modelBuilder.Entity("Cyrella.Model.ItemPersonalizacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EmpreendimentoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Item")
                        .HasColumnType("TEXT");

                    b.Property<double>("Valor")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("EmpreendimentoId");

                    b.ToTable("ItensPersonalizacao");
                });

            modelBuilder.Entity("Cyrella.Model.Afetacao", b =>
                {
                    b.HasOne("Cyrella.Model.Empreendimento", null)
                        .WithMany("Afetacoes")
                        .HasForeignKey("EmpreendimentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cyrella.Model.FaseObra", b =>
                {
                    b.HasOne("Cyrella.Model.Empreendimento", null)
                        .WithMany("FasesObra")
                        .HasForeignKey("EmpreendimentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cyrella.Model.ImagemAgendamento", b =>
                {
                    b.HasOne("Cyrella.Model.AgendamentoManutencao", null)
                        .WithMany("ImagensAnexas")
                        .HasForeignKey("AgendamentoManutencaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cyrella.Model.ItemPersonalizacao", b =>
                {
                    b.HasOne("Cyrella.Model.Empreendimento", null)
                        .WithMany("Personalizacao")
                        .HasForeignKey("EmpreendimentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
